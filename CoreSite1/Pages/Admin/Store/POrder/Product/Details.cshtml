@page
@model CoreSite1.Pages.POrder.Product.DetailsModel

@{
    ViewData["Title"] = "Details";
    ////Layout = "~/Pages/Shared/_LayoutAdmin.cshtml";
}

@*<h1>Product Details</h1>*@

<style>
    /* Style the Image Used to Trigger the Modal */
    #myImg {
        border-radius: 5px;
        cursor: pointer;
        transition: 0.3s;
    }

        #myImg:hover {
            opacity: 0.7;
        }

    /* The Modal (background) */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        padding-top: 100px; /* Location of the box */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.9); /* Black w/ opacity */
    }

    /* Modal Content (Image) */
    .modal-content {
        margin: auto;
        display: block;
        width: 35%;
        max-width: 700px;
        height: 90%;
    }

    /* Caption of Modal Image (Image Text) - Same Width as the Image */
    #caption {
        margin: auto;
        display: block;
        width: 40%;
        max-width: 700px;
        text-align: center;
        color: #ccc;
        padding: 10px 0;
        height: 150px;
    }

    /* Add Animation - Zoom in the Modal */
    .modal-content, #caption {
        animation-name: zoom;
        animation-duration: 0.6s;
    }

    @@keyframes zoom {
        from {
            transform: scale(0)
        }

        to {
            transform: scale(1)
        }
    }

    /* The Close Button */
    .close {
        position: absolute;
        top: 15px;
        right: 35px;
        color: #f1f1f1;
        font-size: 40px;
        font-weight: bold;
        transition: 0.3s;
    }

        .close:hover,
        .close:focus {
            color: #bbb;
            text-decoration: none;
            cursor: pointer;
        }

    /* 100% Image Width on Smaller Screens */
    @@media only screen and (max-width: 700px) {
        .modal-content {
            width: 100%;
        }
    }
</style>
<!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">Product Details</h1>
            </div><!-- /.col -->
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">Product Details</li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>
<!-- /.content-header -->
<div>
    @*<h4>Product</h4>
    
    <hr />*@
    <div class="card">
        <div class="card-header border-transparent">
            <h3 class="card-title">Product Details</h3>
            <div class="card-tools">
                <button type="button" class="btn btn-tool" data-card-widget="collapse">
                    <i class="fas fa-minus"></i>
                </button>
                <button type="button" class="btn btn-tool" data-card-widget="remove">
                    <i class="fas fa-times"></i>
                </button>
            </div>
        </div>
        <div class="card-header border-0">
            <dl class="row">

                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Product.Title)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Product.Title)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Product.Price)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Product.Price)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Product.CostPrice)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Product.CostPrice)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Product.Brand)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Product.Brand)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Product.Discount)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Product.Discount)
                </dd>
                <dt class="col-sm-2">
                    @*@Html.DisplayNameFor(model => model.Product.ProductArtUrl)*@ Product Image
                </dt>
                <dd class="col-sm-10">
                    @*<a class="thumbnail pull-left" href="#">*@

                    <img id="myImg" src="@Html.DisplayFor(model => model.Product.ProductArtUrl)" alt="@Html.DisplayFor(modelItem => Model.Product.Title)" style="width: 72px; height: 72px;">
                    @*</a>*@

                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Product.Description)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Product.Description)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Product.Category)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Product.Category.CategoryId)
                </dd>

            </dl>
        </div>
        <div>
            <a asp-page="./Edit" asp-route-id="@Model.Product.ProductId">Edit</a> |
            <a asp-page="./Index">Back to List</a>|
            <a asp-page="/Variant/Create" asp-route-id="@Model.Product.ProductId">Create Variant</a>
            <hr />
            <form enctype="multipart/form-data" method="post">
                <h2>Purchse Order Form</h2>
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Product.CostPrice" class="control-label"></label>
                    <input asp-for="cp" value="@Model.Product.CostPrice"/>
                </div>
                <div class="form-group">
                    <span>Quantity:</span>
                    <label class="control-label">Quantity:</label>
                    <input type="text" asp-for="qty" value="1">
                </div>

                <input type="hidden" asp-for="vid" id="SVid" value="@Model.Variant.VariantId" />
                <input type="hidden" asp-for="id" id="sid" value="@Model.Product.ProductId" />
                <button type="submit" class="btn btn-primary"  style="border:hidden"><span class="icon_bag_alt"></span> Add to purchase cart</button>
            </form>
        </div>
    </div>
</div>

@*<hr />*@
@*<h1>Product Variants</h1>*@
<div class="card">
    <div class="card-header border-transparent">
        <h3 class="card-title">Product Variants</h3>
        <div class="card-tools">
            <button type="button" class="btn btn-tool" data-card-widget="collapse">
                <i class="fas fa-minus"></i>
            </button>
            <button type="button" class="btn btn-tool" data-card-widget="remove">
                <i class="fas fa-times"></i>
            </button>
        </div>
    </div>
    <div class="card-header border-0">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Variants[0].AddedDate)
                    </th>
                    @*<th>
                            @Html.DisplayNameFor(model => model.Variants[0].AddedBy)
                        </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.Variants[0].SKU)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Variants[0].UnitInStock)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Variants[0].Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Variants[0].Size)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Variants[0].color)
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.Variants[0].IsDefaulProduct)*@Default Variant
                    </th>
                    <th>
                        @*@Html.DisplayNameFor(model => model.Variants[0].OptionalImageURL)*@Variant Image
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Variants[0].OptionalPrice)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Variants[0].Product)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Variants)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.AddedDate)
                        </td>
                        @*<td>
                                @Html.DisplayFor(modelItem => item.AddedBy)
                            </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.SKU)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UnitInStock)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Size)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.color)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IsDefaulProduct)
                        </td>
                        <td>
                            <a class="thumbnail pull-left" href="#">
                                <img id="myImg" src="@Html.DisplayFor(modelItem => item.OptionalImageURL)" alt="@Html.DisplayFor(modelItem => item.Name)" style="width: 72px; height: 72px;">
                            </a>

                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OptionalPrice)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Product.Brand)
                        </td>
                        <td>
                            <a asp-page="/Variant/Edit" asp-route-id="@item.VariantId">Edit</a> |
                            <a asp-page="/Variant/Details" asp-route-id="@item.VariantId">Details</a> |
                            <a asp-page="/Variant/Delete" asp-route-id="@item.VariantId">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<!-- The Modal -->
<div id="myModal" class="modal">

    <!-- The Close Button -->
    <span class="close">&times;</span>

    <!-- Modal Content (The Image) -->
    <img class="modal-content" id="img01">

    <!-- Modal Caption (Image Text) -->
    <div id="caption"></div>
</div>
<script src="~/lib/jquery/dist/jquery.js"></script>
<script>

    // Get the modal
    var modal = document.getElementById("myModal");

    $(document).ready(function () {
        $(".table img").on('click', function () {
            var modalImg = document.getElementById("img01");
            var captionText = document.getElementById("caption");
            //img.onclick = function () {
            modal.style.display = "block";
            modalImg.src = this.src;
            captionText.innerHTML = this.alt;
            //alert('bb');
        });

        $(".row img").on('click', function () {
            var modalImg = document.getElementById("img01");
            var captionText = document.getElementById("caption");
            //img.onclick = function () {
            modal.style.display = "block";
            modalImg.src = this.src;
            captionText.innerHTML = this.alt;
            //alert('bb');
        });
        // Get the <span> element that closes the modal
        var span = document.getElementsByClassName("close")[0];

        // When the user clicks on <span> (x), close the modal
        span.onclick = function () {
            modal.style.display = "none";
        }

    });
</script>
