@page
@model CoreSite1.Pages.Category.IndexModel

@{
    ViewData["Title"] = "Index";
    ////Layout = "~/Pages/Shared/_LayoutAdmin.cshtml";
}

@*<h1></h1>*@
<!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">Categorys</h1>
            </div><!-- /.col -->
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">Category</li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>
<!-- /.content-header -->
<section class="content">
    <div class="container-fluid">
        <!-- Info boxes -->
        <partial name="_TotalPartial" />
        <!-- /.row -->




        <div class="card">
            <div class="card-header border-transparent">
                @*<h3 class="card-title">Categorys</h3>*@
                @*<div class="card-tools">
            <button type="button" class="btn btn-tool" data-card-widget="collapse">
                <i class="fas fa-minus"></i>
            </button>
            <button type="button" class="btn btn-tool" data-card-widget="remove">
                <i class="fas fa-times"></i>
            </button>
        </div>*@

                <div>
                    <a asp-page="Create">Create New</a>
                </div>
                <form asp-page="./Index" method="get">
                    @*<div class="form-actions no-color">
                <p>
                    Find by name:
                    <input type="text" name="SearchString" value="@Model.CurrentFilter" />
                    <input type="submit" value="Search" class="btn btn-default" /> |
                    <a asp-page="./Index">Back to full List</a>
                </p>
            </div>*@
                    <div class="form-inline">
                        <div class="input-group" data-widget="sidebar-search">
                            <div class="form-actions no-color">
                                <p>
                                    Find by name:
                                    <input type="search" class="form-control form-control-sidebar" name="SearchString" value="@Model.CurrentFilter" placeholder="Search" aria-label="Search" />
                                    <button class="btn btn-sidebar">
                                        <i class="fas fa-search fa-fw"></i>
                                    </button>
                                    |<a asp-page="./Index">Back to full List</a>
                                </p>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="card-header border-0">
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Category[0].Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Category[0].ParentCategoryId)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Category[0].Description)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Category)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ParentCategoryId)
                                    @*@if (item.ParentCategoryId != 0)
                                    {
                                        @Html.DisplayFor(modelItem => Model.Category.Where(e => e.CategoryId == item.ParentCategoryId).First().Name)
                                        @item.ParentCategoryId.ToString()
                                    }
                                    else
                                    { @Html.DisplayFor(modelItem => item.ParentCategoryId)}*@
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Description)
                                </td>
                                <td>
                                    <a asp-page="./Edit" asp-route-id="@item.CategoryId">Edit</a> |
                                    <a asp-page="./Details" asp-route-id="@item.CategoryId">Details</a> |
                                    <a asp-page="./Delete" asp-route-id="@item.CategoryId">Delete</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                @{
                    var prevDisabled = !Model.Category.HasPreviousPage ? "disabled" : "";
                    var nextDisabled = !Model.Category.HasNextPage ? "disabled" : "";
                }
                <a asp-page="./Index"
                   asp-route-pageIndex="@(Model.Category.PageIndex - 1)"
                   asp-route-currentFilter="@Model.CurrentFilter"
                   class="btn btn-default @prevDisabled">
                    Previous
                </a>
                <a asp-page="./Index"
                   asp-route-pageIndex="@(Model.Category.PageIndex + 1)"
                   asp-route-currentFilter="@Model.CurrentFilter"
                   class="btn btn-default @nextDisabled">
                    Next
                </a>
            </div>
        </div>


    </div><!--/. container-fluid -->
</section>
