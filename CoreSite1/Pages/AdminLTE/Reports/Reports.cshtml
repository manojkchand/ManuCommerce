@page
@model CoreSite1.Pages.Admin.Reports.ReportsModel

@{
    ViewData["Title"] = "Reports";
    ////Layout = "~/Pages/Shared/_LayoutAdmin.cshtml";
}

<h1>Reports</h1>

@*<p>
        <a asp-page="Create">Create New</a>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.OrderItem[0].AddedDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderItem[0].AddedBy)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderItem[0].Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderItem[0].SKU)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderItem[0].Quantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderItem[0].FinalUnitPrice)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderItem[0].Discount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderItem[0].Product)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderItem[0].Variant)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderItem[0].Order)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model.OrderItem) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.AddedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AddedBy)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SKU)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FinalUnitPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Discount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Product.Brand)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Variant.VariantId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Order.OrderId)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.OrderItemId">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.OrderItemId">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.OrderItemId">Delete</a>
                </td>
            </tr>
    }
        </tbody>
    </table>*@




@*@model IEnumerable<RestaurantManagementSystems.Models.OrderDetail>*@



<div id="cart-total" style="font-size:larger;font-weight:bold"></div>


@*<div class="row">
    <div class="col-lg-6">
        <!-- Basic Card Example -->
        <div class="card mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Total numbers of Orders for every Menu Item in a day-</h6>
            </div>
            <div class="card-body">
                <div>
                    <h2></h2>
                    <table>
                        <thead>
                            <tr id="table_head"></tr>
                        </thead>
                        <tbody id="table_content"></tbody>
                    </table>
                    <div class="card-body">
                        <div class="chart-bar">
                            <canvas id="myBarChart"></canvas>
                        </div>
                        <hr>
                    </div>
                </div>

            </div>
        </div>
        <!-- Basic Card Example -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Total Numbers of Orders on hourly bases:-</h6>
            </div>
            <div class="card-body">
                <div>
                    <h2></h2>
                    <table>
                        <thead>
                            <tr id="table_head1"></tr>
                        </thead>
                        <tbody id="table_content1"></tbody>
                    </table>
                     Bar Chart 
                    <div class="card-body">
                        <div class="chart-bar">
                            <canvas id="myBarChart1"></canvas>
                        </div>
                        <hr>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>*@

<!-- Main content -->
<div class="content">
    <div class="container-fluid">
        <!-- Info boxes -->
        <partial name="_TotalPartial" />
        <!-- /.row -->
        <div class="row">
            <div class="col-lg-6">
                <div class="card">
                    <div class="card-header">
                        <h5 class="m-0">Total numbers of Orders for every Product in a day</h5>
                    </div>
                    <div class="card-body">
                        <div class="chart-bar">
                            <canvas id="myBarChart"></canvas>
                        </div>
                        <hr>
                    </div>
                </div>
                <div class="card card-primary card-outline">
                    <div class="card-header">
                        <h5 class="m-0">Total numbers of Orders for every Product in a day</h5>
                    </div>
                    <div class="card-body">
                        <table>
                            <thead>
                                <tr id="table_head"></tr>
                            </thead>
                            <tbody id="table_content"></tbody>
                        </table>
                    </div>
                </div><!-- /.card -->
            </div>
            <!-- /.col-md-6 -->
            <div class="col-lg-6">
                <div class="card">
                    <div class="card-header">
                        <h5 class="m-0">Total Numbers of Orders on hourly bases</h5>
                    </div>
                    <div class="card-body">
                        <div class="chart-bar">
                            <canvas id="myBarChart1"></canvas>
                        </div>
                        <hr>
                    </div>
                </div>
                <div class="card card-primary card-outline">
                    <div class="card-header">
                        <h5 class="m-0">Total Numbers of Orders on hourly bases</h5>
                    </div>
                    <div class="card-body">
                        <table>
                            <thead>
                                <tr id="table_head1"></tr>
                            </thead>
                            <tbody id="table_content1"></tbody>
                        </table>
                    </div>
                </div>
            </div>
            <!-- /.col-md-6 -->
        </div>
        <!-- /.row -->
    </div><!-- /.container-fluid -->
</div>
<!-- /.content -->



<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/lib/chart.js/Chart.js"></script>
@*<script src="~/js/chart-bar-demo.js"></script>*@
<script src="~/plugins/chart.js/Chart.js"></script>

<script>
    $(document).ready(function () {
        //alert(0);
        const uri = '/AdminLTE/Reports/Reports?handler=OrderTotal';
        fetch(uri)
            .then(response => response.json())
            .then(data => _displayItems(data))
            .catch(error => console.error('Unable to get items.', error));
        function _displayItems(data) {
            //alert(4);
            $('#cart-total').text('TOTAL SALE FOR TODAY: ' + data);
        }
        //$.post("/Index?handler=OrderTotal",             /*/Orders/OrderTotal",*/
        //    function (data) {
        //        alert(data);
        //        $('#cart-total').text('TOTAL SALE FOR TODAY: ' + data);
        //    });

        //fetch("/Sales/Reports/Index?handler=HourlyOrderTotal")
        //    .then(response => response.json())
        //    .then(data => _displayItems2(data))
        //    .catch(error => console.error('Unable to get items.', error));

        //function _displayItems2(data) {
        //    //alert(2);
        //    //$('#cart-total').text('TOTAL SALE FOR TODAY: ' + data);
        //}

        $.get("/AdminLTE/Reports/Reports?handler=HourlyOrderTotal",
            function (data) {
                // alert(2);
                var json = data;
                for (var k = 0; k < Object.keys(json[0]).length; k++) {
                    $('#table_head1').append('<td style="width:150px">' + Object.keys(json[0])[k] + '</td>');
                    //alert('p');
                }

                // Get table body and print
                for (var i = 0; i < Object.keys(json).length; i++) {
                    $('#table_content1').append('<tr>');
                    for (var j = 0; j < Object.keys(json[0]).length; j++) {
                        $('#table_content1').append('<td style="width:150px">' + json[i][Object.keys(json[0])[j]] + '</td>');
                    }
                    $('#table_content1').append('</tr>');
                }




                var hours = [];
                var noofOders = [];
                //var price = [];
                for (var i = 0; i < Object.keys(json).length; i++) {
                    hours[i] = json[i][Object.keys(json[0])[0]];
                    noofOders[i] = json[i][Object.keys(json[0])[1]];
                    //price[i] = json[i][Object.keys(json[0])[2]];
                    //alert(json[i][Object.keys(json[0])[1]]);
                    //alert('test');
                }
                var ya = [1, 2, 3, 4, 5, 6, 7];
                // Bar Chart Example
                var ctx = document.getElementById("myBarChart1");
                var myBarChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: hours,
                        datasets: [{
                            label: "No of Orders",
                            backgroundColor: "#4e73df",
                            hoverBackgroundColor: "#2e59d9",
                            borderColor: "#4e73df",
                            data: noofOders,
                        }],
                    },
                    options: {
                        maintainAspectRatio: false,
                        layout: {
                            padding: {
                                left: 10,
                                right: 25,
                                top: 25,
                                bottom: 0
                            }
                        },
                        scales: {
                            xAxes: [{
                                time: {
                                    unit: 'Item'
                                },
                                gridLines: {
                                    display: false,
                                    drawBorder: false
                                },
                                //ticks: {
                                //    maxTicksLimit: 6
                                //},
                                maxBarThickness: 25,
                            }],
                            yAxes: [{
                                ticks: {
                                    min: 0,
                                    max: 100,
                                    maxTicksLimit: 5,
                                    padding: 10,
                                    // Include a dollar sign in the ticks
                                    callback: function (value, index, values) {
                                        return number_format(value);
                                    }
                                },
                                gridLines: {
                                    color: "rgb(234, 236, 244)",
                                    zeroLineColor: "rgb(234, 236, 244)",
                                    drawBorder: false,
                                    borderDash: [2],
                                    zeroLineBorderDash: [2]
                                }
                            }],
                        },
                        legend: {
                            display: false
                        },
                        tooltips: {
                            titleMarginBottom: 10,
                            titleFontColor: '#6e707e',
                            titleFontSize: 14,
                            backgroundColor: "rgb(255,255,255)",
                            bodyFontColor: "#858796",
                            borderColor: '#dddfeb',
                            borderWidth: 1,
                            xPadding: 15,
                            yPadding: 15,
                            displayColors: false,
                            caretPadding: 10,
                            callbacks: {
                                label: function (tooltipItem, chart) {
                                    var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                                    return datasetLabel + ': ' + number_format(tooltipItem.yLabel);
                                }
                            }
                        },
                    }
                });
            });



    });

</script>

<script>








    $(document).ready(function () {
        //alert(1);
        $.get("/AdminLTE/Reports/Reports?handler=Reporting",            /*/OrderDetails/Reporting",*/
            function (data) {
                //alert(0);
                //$('#cart-total').text('TOTAL ORDER AMOUNT FOR TODAY IS: ' + data);

                var json = data;
                var menuItems = [];
                var noofOders = [];
                var price = [];
                for (var i = 0; i < Object.keys(json).length; i++) {
                    menuItems[i] = json[i][Object.keys(json[0])[0]];
                    noofOders[i] = json[i][Object.keys(json[0])[1]];
                    price[i] = json[i][Object.keys(json[0])[2]];
                    //alert(json[i][Object.keys(json[0])[1]]);
                }
                var ya = [1, 2, 3, 4, 5, 6, 7];


                for (var k = 0; k < Object.keys(json[0]).length; k++) {
                    $('#table_head').append('<td style="width:150px">' + Object.keys(json[0])[k] + '</td>');
                    //alert('p');
                }
                $('#table_head').append('<td style="width:150px"> TotalPrice </td>');

                // Get table body and print
                for (var i = 0; i < Object.keys(json).length; i++) {
                    $('#table_content').append('<tr>');
                    for (var j = 0; j < Object.keys(json[0]).length; j++) {
                        $('#table_content').append('<td style="width:150px">' + json[i][Object.keys(json[0])[j]] + '</td>');
                        //alert(json[i][Object.keys(json[0])[j]]);
                    }
                    $('#table_content').append('<td style="width:150px">' + price[i] * noofOders[i] + '</td>');
                    //out += arr[i][0] + ",";
                    //alert('p');
                    $('#table_content').append('</tr>');
                }





                // Bar Chart Example
                var ctx = document.getElementById("myBarChart");
                var myBarChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: menuItems,
                        datasets: [{
                            label: "No of Orders",
                            backgroundColor: "#4e73df",
                            hoverBackgroundColor: "#2e59d9",
                            borderColor: "#4e73df",
                            data: noofOders,
                        }],
                    },
                    options: {
                        maintainAspectRatio: false,
                        layout: {
                            padding: {
                                left: 10,
                                right: 25,
                                top: 25,
                                bottom: 0
                            }
                        },
                        scales: {
                            xAxes: [{
                                time: {
                                    unit: 'Item'
                                },
                                gridLines: {
                                    display: false,
                                    drawBorder: false
                                },
                                //ticks: {
                                //    maxTicksLimit: 6
                                //},
                                maxBarThickness: 25,
                            }],
                            yAxes: [{
                                ticks: {
                                    min: 0,
                                    max: 100,
                                    maxTicksLimit: 5,
                                    padding: 10,
                                    // Include a dollar sign in the ticks
                                    callback: function (value, index, values) {
                                        return number_format(value);
                                    }
                                },
                                gridLines: {
                                    color: "rgb(234, 236, 244)",
                                    zeroLineColor: "rgb(234, 236, 244)",
                                    drawBorder: false,
                                    borderDash: [2],
                                    zeroLineBorderDash: [2]
                                }
                            }],
                        },
                        legend: {
                            display: false
                        },
                        tooltips: {
                            titleMarginBottom: 10,
                            titleFontColor: '#6e707e',
                            titleFontSize: 14,
                            backgroundColor: "rgb(255,255,255)",
                            bodyFontColor: "#858796",
                            borderColor: '#dddfeb',
                            borderWidth: 1,
                            xPadding: 15,
                            yPadding: 15,
                            displayColors: false,
                            caretPadding: 10,
                            callbacks: {
                                label: function (tooltipItem, chart) {
                                    var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                                    return datasetLabel + ': ' + number_format(tooltipItem.yLabel);
                                }
                            }
                        },
                    }
                });
            });

    });


    // Set new default font family and font color to mimic Bootstrap's default styling
    Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
    Chart.defaults.global.defaultFontColor = '#858796';

    function number_format(number, decimals, dec_point, thousands_sep) {
        // *     example: number_format(1234.56, 2, ',', ' ');
        // *     return: '1 234,56'
        number = (number + '').replace(',', '').replace(' ', '');
        var n = !isFinite(+number) ? 0 : +number,
            prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
            sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
            dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
            s = '',
            toFixedFix = function (n, prec) {
                var k = Math.pow(10, prec);
                return '' + Math.round(n * k) / k;
            };
        // Fix for IE parseFloat(0.55).toFixed(0) = 0;
        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
        if (s[0].length > 3) {
            s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
        }
        if ((s[1] || '').length < prec) {
            s[1] = s[1] || '';
            s[1] += new Array(prec - s[1].length + 1).join('0');
        }
        return s.join(dec);
    }

</script>


<div id="dvItems" style="font-size:24px;">
</div>

<script>
    $.ajax({
        type: "GET",
        url: "/Sales/Reports/Index?handler=List",
        contentType: "application/json",
        dataType: "json",
        success: function (response) {
            var dvItems = $("#dvItems");
            dvItems.empty();
            $.each(response, function (i, item) {
                var $tr = $('<li>').append(item).appendTo(dvItems);
            });
        },
        failure: function (response) {
            alert(response);
        }
    });

</script>
